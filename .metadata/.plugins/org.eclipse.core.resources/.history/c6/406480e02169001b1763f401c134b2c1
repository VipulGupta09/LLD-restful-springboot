package com.questions.tree;

import java.util.ArrayList;

class TreeNode{
	TreeNode left;
	TreeNode right;
	int val;
	public TreeNode() {
	}
	public TreeNode(TreeNode left,TreeNode right,int val) {
		this.left = left;
		this.right = right;
		this.val = val;
	}
}

public class TreeTraversal {
	// Pre 	:Root	Left	Right	: 1 2 4 5 3
	// Post :Left	Right	Root	: 4 5 2 3 1
	// In	:Left	Root	Right
	
//			1
//		2		3
//	4		5
	
	static ArrayList<Integer> list = new ArrayList<Integer>();
	public static void main(String[] args) {
		
		TreeNode root = new TreeNode(new TreeNode(), new TreeNode(), 1);
		root.left = new TreeNode(new TreeNode(), new TreeNode(), 2);
		root.left.left = new TreeNode(null, null, 4);
		root.left.right = new TreeNode(null, null, 5);
		
		root.right = new TreeNode(null, null, 3);
		
		preOrderTraversal(root);
		for(int i:list)
			System.out.print(i+" ");

	}
	
	public static ArrayList<Integer> preOrderTraversal(TreeNode root) {
		if(root==null) 
			return list;
		list.add(root.val);
		if(root.left!=null) 
			preOrderTraversal(root.left);	
		if(root.right!=null) 
			preOrderTraversal(root.right);
		return list;	
	}
	
//		1
//	 2		3
//4		5

	
	// Left Right Root
	public static ArrayList<Integer> postOrderTraversal(TreeNode root){
		if(root == null)
			return list;
		if(root.left!=null)
			postOrderTraversal(root.left);
		if(root.right!=null)
			postOrderTraversal(root.right);
		list.add(root.val);
		
		return list;
		
	}
}
